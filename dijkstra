#include<stdio.h>
#include<stdbool.h>
#include<time.h>
#define v 9
#define INT_MAX 999
clock_t start, end;
double time_taken;

int mindist(int dist[],bool sptset[])
{
	int min= INT_MAX, min_index;

	for(int j=0;j<v;j++)
	{
		if(sptset[j]==false && dist[j]<=min)
			min= dist[j], min_index=j;
	}
	return min_index;
}


int display(int dist[],int n)
{
	printf("Vertex Distance from source\n");
	for(int i=0;i<v;i++)
		printf("%d tt %d\n",i,dist[i]);
}
void dijkstra(int graph[v][v],int src )
{
	int i,count,j,u;
	int dist[v];
	bool sptset[v];

	for(i=0;i<v;i++)
	{
		dist[i]=INT_MAX, sptset[i]=false;
	}

	dist[src]=0;

	for(count=0;count<v-1;count++)
	{
		u=mindist(dist,sptset);

		sptset[u]=true;

		for(j=0;j<v;j++)
		{
			if(!sptset[j] && graph[u][j] && dist[u]!=INT_MAX && dist[u]+graph[u][j]<dist[j])
			{
				dist[j]=dist[u]+graph[u][j];
			}
			display(dist,j);
		}
	}
}
int main()
{
	int graph[v][v]={{0, 4, 0, 0, 0, 0, 0, 8, 0}, 
                      {4, 0, 8, 0, 0, 0, 0, 11, 0}, 
                      {0, 8, 0, 7, 0, 4, 0, 0, 2}, 
                      {0, 0, 7, 0, 9, 14, 0, 0, 0}, 
                      {0, 0, 0, 9, 0, 10, 0, 0, 0}, 
                      {0, 0, 4, 14, 10, 0, 2, 0, 0}, 
                      {0, 0, 0, 0, 0, 2, 0, 1, 6}, 
                      {8, 11, 0, 0, 0, 0, 1, 0, 7}, 
                      {0, 0, 2, 0, 0, 0, 6, 7, 0} 
                     };

    start= clock();
	dijkstra(graph,0);
	end= clock();

time_taken=((double)(end-start))/CLOCKS_PER_SEC;
printf("The total time takes=%lf\nStart time=%ld\nEnd time=%ld\n",time_taken,start,end);

	return 0;   

}
